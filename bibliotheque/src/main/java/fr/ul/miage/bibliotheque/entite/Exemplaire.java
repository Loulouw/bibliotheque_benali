package fr.ul.miage.bibliotheque.entite;
// Generated 8 oct. 2018 10:15:55 by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Exemplaire generated by hbm2java
 */
@Entity
@Table(name = "exemplaire", catalog = "bibliotheque")
public class Exemplaire implements java.io.Serializable {

	private Integer id;
	private Etat etat;
	private Oeuvre oeuvre;
	private Set<Emprunt> emprunts = new HashSet<Emprunt>(0);

	@Transient
	private boolean emprunter;
	
	public Exemplaire() {
	}

	public Exemplaire(Etat etat, Oeuvre oeuvre) {
		this.etat = etat;
		this.oeuvre = oeuvre;
	}

	public Exemplaire(Etat etat, Oeuvre oeuvre, Set<Emprunt> emprunts) {
		this.etat = etat;
		this.oeuvre = oeuvre;
		this.emprunts = emprunts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_etat", nullable = false)
	public Etat getEtat() {
		return this.etat;
	}

	public void setEtat(Etat etat) {
		this.etat = etat;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_oeuvre", nullable = false)
	public Oeuvre getOeuvre() {
		return this.oeuvre;
	}

	public void setOeuvre(Oeuvre oeuvre) {
		this.oeuvre = oeuvre;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "exemplaire")
	public Set<Emprunt> getEmprunts() {
		return this.emprunts;
	}

	public void setEmprunts(Set<Emprunt> emprunts) {
		this.emprunts = emprunts;
	}

	
	@Transient
	public boolean isEmprunter() {
		boolean encours = false;
		for(Emprunt e : emprunts) {
			if(e.getEmpruntRendu() == 0) {
				encours = true;
				break;
			}
		}
		emprunter = encours;
		return emprunter;
	}

	@Transient
	public void setEmprunter(boolean emprunter) {
		this.emprunter = emprunter;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Exemplaire other = (Exemplaire) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
	
	

}
